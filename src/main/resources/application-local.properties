# ---- App ----
spring.application.name=DemoForTSB
#server.port=8080 because of https
# Custom property for HTTP port, comment the above to use this, but it need java configuration
#http.port=8080
spring.threads.virtual.enabled=true

# HTTPS Configuration
# Kong proxy uses 8443, so we use 9443 for local development
server.port=9443
server.ssl.enabled=true
server.ssl.key-store=classpath:ssl/keystore.p12
server.ssl.key-store-password=changeit
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=demofortsb

# Optional: Redirect HTTP to HTTPS
server.ssl.enabled-protocols=TLSv1.2,TLSv1.3
server.ssl.ciphers=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256

# Keep HTTP port for health checks (optional)
management.server.port=8080
management.server.ssl.enabled=false

# ---- JWT ----
jwt.secret=$2a$12$Rn0.OZsB.WWH0YzNrsyHAuw6.8T5yhed10EF14Q2JHCV2FI.l1EMm
jwt.ttl-minutes=60
jwt.admin-national-id=123456789

# ---- Redis ----
spring.data.redis.host=localhost
spring.data.redis.port=6379
# Redis password, local no password, but set redis123 in docker-compose.yml
spring.data.redis.password=

# ---- H2 (in-memory) ----
#spring.datasource.url=jdbc:h2:mem:tsbdb;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=tsb
#spring.datasource.password=tsb

# ---- PostgreSQL (values can be overridden by env vars in docker-compose) ----
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/demofortsb}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:tsb}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:tsb}
spring.datasource.driver-class-name=org.postgresql.Driver

# ---- start docker PostgreSQL for local development ----
#docker run -d \
#  --name postgres-local \
#  -p 5432:5432 \
#  -e POSTGRES_PASSWORD=tsb \
#  -e POSTGRES_USER=tsb \
#  -e POSTGRES_DB=demofortsb \
#  postgres:16

# ---- JPA / Hibernate ----
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# ---- H2 Console ----
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=true

# ---- Liquibase dev for import data----
spring.liquibase.enabled=true
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.xml
spring.liquibase.contexts=local
spring.liquibase.drop-first=true
# set false to disable DataInitializer.class, keep this Java seeder off to avoid duplicates.
app.seed.enabled=true

# ---- Actuator / Metrics ----
management.endpoints.web.exposure.include=health,info,prometheus
management.metrics.tags.application=${spring.application.name}

# Show detailed health information
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always

# Or for debugging, disable specific health indicators
#management.health.db.enabled=true
#management.health.diskspace.enabled=true
# disable redis health check as it is not available in local
management.health.redis.enabled=true

# ---- JSON formatting ----
spring.jackson.serialization.indent-output=true

# ---- Logging (dev-friendly) ----
logging.file.name=logs/app.log
logging.level.root=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework.security=DEBUG
logging.level.org.h2=DEBUG
logging.level.liquibase=DEBUG

# ---- OpenAPI ----
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs





